# Generated by Django 5.2.6 on 2025-09-12 12:57

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of this configuration profile', max_length=100, verbose_name='configuration name')),
                ('environment', models.CharField(choices=[('development', 'Development'), ('staging', 'Staging'), ('production', 'Production'), ('testing', 'Testing')], default='development', help_text='Target environment for this configuration', max_length=20, verbose_name='environment')),
                ('description', models.TextField(blank=True, help_text='Description of this configuration profile', verbose_name='description')),
                ('configuration', models.JSONField(default=dict, help_text='Configuration settings as JSON', verbose_name='configuration data')),
                ('is_active', models.BooleanField(default=False, help_text='Whether this configuration is currently active', verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'System Configuration',
                'verbose_name_plural': 'System Configurations',
                'db_table': 'system_configurations',
                'ordering': ['environment', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], default='info', help_text='Severity level of the log entry', max_length=20, verbose_name='log level')),
                ('category', models.CharField(choices=[('system', 'System'), ('security', 'Security'), ('configuration', 'Configuration'), ('maintenance', 'Maintenance'), ('performance', 'Performance'), ('integration', 'Integration')], default='system', help_text='Category of the log entry', max_length=50, verbose_name='category')),
                ('message', models.TextField(help_text='Log message', verbose_name='message')),
                ('details', models.JSONField(blank=True, default=dict, help_text='Additional details as JSON', verbose_name='details')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address associated with this log entry', null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, help_text='User agent string (if applicable)', verbose_name='user agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
            ],
            options={
                'verbose_name': 'System Log',
                'verbose_name_plural': 'System Logs',
                'db_table': 'system_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemMaintenanceMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=False, help_text='Whether the system is currently in maintenance mode', verbose_name='maintenance mode enabled')),
                ('message', models.TextField(default='System is currently under maintenance. Please try again later.', help_text='Message displayed to users during maintenance', verbose_name='maintenance message')),
                ('message_ar', models.TextField(blank=True, help_text='Arabic translation of the maintenance message', verbose_name='maintenance message (Arabic)')),
                ('allowed_ips', models.JSONField(blank=True, default=list, help_text='List of IP addresses that can access the system during maintenance', verbose_name='allowed IP addresses')),
                ('scheduled_start', models.DateTimeField(blank=True, help_text='Scheduled start time for maintenance (optional)', null=True, verbose_name='scheduled start')),
                ('scheduled_end', models.DateTimeField(blank=True, help_text='Scheduled end time for maintenance (optional)', null=True, verbose_name='scheduled end')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'System Maintenance Mode',
                'verbose_name_plural': 'System Maintenance Modes',
                'db_table': 'system_maintenance_mode',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text='Unique identifier for the setting', max_length=100, unique=True, verbose_name='setting key')),
                ('name', models.CharField(help_text='Human-readable name for the setting', max_length=200, verbose_name='display name')),
                ('description', models.TextField(blank=True, help_text='Detailed description of what this setting controls', verbose_name='description')),
                ('category', models.CharField(choices=[('general', 'General'), ('email', 'Email Settings'), ('file_upload', 'File Upload'), ('notifications', 'Notifications'), ('security', 'Security'), ('ui', 'User Interface'), ('workflow', 'Workflow'), ('integration', 'Integration'), ('maintenance', 'Maintenance'), ('performance', 'Performance')], default='general', help_text='Setting category for organization', max_length=50, verbose_name='category')),
                ('setting_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON'), ('email', 'Email'), ('url', 'URL')], default='string', help_text='Data type of the setting value', max_length=20, verbose_name='type')),
                ('value', models.TextField(help_text='Setting value (stored as text, converted based on type)', verbose_name='value')),
                ('default_value', models.TextField(blank=True, help_text='Default value for this setting', verbose_name='default value')),
                ('is_required', models.BooleanField(default=False, help_text='Whether this setting must have a value', verbose_name='is required')),
                ('is_editable', models.BooleanField(default=True, help_text='Whether this setting can be modified through the UI', verbose_name='is editable')),
                ('is_sensitive', models.BooleanField(default=False, help_text='Whether this setting contains sensitive information', verbose_name='is sensitive')),
                ('validation_rules', models.JSONField(blank=True, default=dict, help_text='JSON object containing validation rules for the value', verbose_name='validation rules')),
                ('help_text', models.TextField(blank=True, help_text='Help text displayed to users when editing this setting', verbose_name='help text')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'System Setting',
                'verbose_name_plural': 'System Settings',
                'db_table': 'system_settings',
                'ordering': ['category', 'key'],
            },
        ),
    ]
